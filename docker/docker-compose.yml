version: '3.0'

services:
  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.le.acme.httpchallenge=true"
      - "--certificatesresolvers.le.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.le.acme.email=admin@fcd.su"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
    networks:
      app_network:

  web:
    build:
      context: https://github.com/TeamTells/portal_web.git#master
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`${HOSTNAME:-localhost}`)"
      - "traefik.http.routers.web.entrypoints=web"
      - "traefik.http.routers.web.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.web-secured.rule=Host(`${HOSTNAME:-localhost}`)"
      - "traefik.http.routers.web-secured.entrypoints=websecure"
      - "traefik.http.routers.web-secured.tls.certresolver=le"
    networks:
      app_network:

  backend:
    build:
      context: https://github.com/TeamTells/portal_back.git#TTP-20
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${HOSTNAME:-localhost}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.routers.backend.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.backend-secured.rule=Host(`${HOSTNAME:-localhost}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend-secured.entrypoints=websecure"
      - "traefik.http.routers.backend-secured.tls.certresolver=le"
    environment:
      - DB_HOST=db
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-othiarahJa1eJoow}
      - DB_NAME=${DB_NAME:-app}
      - BACKEND_PORT=80
    depends_on:
      - db
    networks:
      app_network:

  db:
    image: postgres:16
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-othiarahJa1eJoow}
      - POSTGRES_DB=${DB_NAME:-app}
    volumes:
      - ./data/db:/var/lib/postgresql/data
    networks:
      app_network:

networks:
  app_network:
    driver: bridge